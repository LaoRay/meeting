<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clubank.meeting.mapper.RoomUseInfoMapper">
  <resultMap id="BaseResultMap" type="com.clubank.meeting.entity.RoomUseInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="room_id" jdbcType="BIGINT" property="roomId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="meeting_id" jdbcType="BIGINT" property="meetingId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, room_id, start_time, end_time, status, meeting_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room_use_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from room_use_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.clubank.meeting.entity.RoomUseInfo">
    insert into room_use_info (id, room_id, start_time,
      end_time, status, meeting_id
      )
    values (#{id,jdbcType=BIGINT}, #{roomId,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{meetingId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.clubank.meeting.entity.RoomUseInfo">
    insert into room_use_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="meetingId != null">
        meeting_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="meetingId != null">
        #{meetingId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.clubank.meeting.entity.RoomUseInfo">
    update room_use_info
    <set>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="meetingId != null">
        meeting_id = #{meetingId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clubank.meeting.entity.RoomUseInfo">
    update room_use_info
    set room_id = #{roomId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      meeting_id = #{meetingId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--根据会议室id查询会议室占用情况-->
  <select id="selectByRoomId" parameterType="map" resultType="map">
    SELECT
    rui.room_id AS roomId,
    rui.start_time AS startTime,
    rui.end_time AS endTime,
    rui.meeting_id AS meetingId,
    mr.room_name AS roomName,
    m.meeting_name AS meetingName,
    m.meeting_subject AS meetingSubject,
    m.meeting_status AS meetingStatus,
    m.organizer_id AS organizerId,
    u.user_name AS organizer
    FROM
    room_use_info rui
    LEFT JOIN meeting_room mr ON rui.room_id = mr.room_id
    LEFT JOIN meeting m ON rui.meeting_id = m.meeting_id
    LEFT JOIN user u ON m.organizer_id = u.user_id
    WHERE rui.status = 1
    <if test="roomId != null and roomId > 0">
      and mr.room_id = #{roomId}
    </if>
    <if test="date != null and date != ''">
      and TO_DAYS(#{date}) = TO_DAYS(rui.start_time)
    </if>
    ORDER BY rui.start_time
  </select>
  <!--根据会议ID删除会议室占用记录-->
  <delete id="deleteByMeetingId" parameterType="java.lang.Long">
    delete from room_use_info
    where meeting_id = #{meetingId,jdbcType=BIGINT}
  </delete>

  <!--更新会议室使用状态-->
  <update id="updateByMeetingId" parameterType="map">
    update room_use_info
    set status = #{status,jdbcType=INTEGER}
    where meeting_id = #{meetingId,jdbcType=BIGINT}
  </update>

  <!--根据会议室主键和会议开始结束时间查询当前时间段是否有其他会议占用-->
  <select id="selectConflictList" parameterType="map" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List" />
    FROM
      room_use_info
    WHERE status = 1
    AND room_id = #{roomId}
    AND (
      (start_time <![CDATA[<]]> #{startTime} AND end_time > #{startTime})
    OR
      (start_time <![CDATA[<]]> #{endTime} AND end_time > #{endTime})
    )
  </select>
</mapper>